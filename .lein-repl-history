 (use '[clojure.tools.namespace.repl :only (refresh)]) (refresh)
(server/start runnable-service)
 (use '[clojure.tools.namespace.repl :only (refresh)]) (refresh)
(server/stop runnable-service)
 (use '[clojure.tools.namespace.repl :only (refresh)]) (refresh)
(server/start runnable-service)
(server/stop runnable-service)
exit
 (use '[clojure.tools.namespace.repl :only (refresh)]) (refresh)
(server/start runnable-service)
exit
(server/start runnable-service)
(server/staop runnable-service)
(server/stop runnable-service)
 (use '[clojure.tools.namespace.repl :only (refresh)]) (refresh)
(server/stop runnable-service)
(server/start runnable-service)
(server/stop runnable-service)
 (use '[clojure.tools.namespace.repl :only (refresh)]) (refresh)
(server/start runnable-service)
(server/stop runnable-service)
(server/start runnable-service)
(server/stop runnable-service)
 (use '[clojure.tools.namespace.repl :only (refresh)]) (refresh)
(server/stop runnable-service)
(server/start runnable-service)
(server/stop runnable-service)
exit
 (use '[clojure.tools.namespace.repl :only (refresh)]) (refresh)
(service/start runnable-service)
(server/start runnable-service)
(server/stop runnable-service)
 (use '[clojure.tools.namespace.repl :only (refresh)]) (refresh)
(server/start runnable-service)
(server/stop runnable-service)
 (use '[clojure.tools.namespace.repl :only (refresh)]) (refresh)
(server/start runnable-service)
exit
(server/start runnable-service)
(server/stop runnable-service)
 (use '[clojure.tools.namespace.repl :only (refresh)]) (refresh)
(server/start runnable-service)
credentials-config
cp-infra.message/credentials-config
(:username cp-infra.message/credentials-config)
(:password cp-infra.message/credentials-config)
(type cp-infra.message/credentials-config)
(server/stop runnable-service)
 (use '[clojure.tools.namespace.repl :only (refresh)]) (refresh)
(server/start runnable-service)
exit
 (use '[clojure.tools.namespace.repl :only (refresh)]) (refresh)
(server/start runnable-service)
(server/stop runnable-service)
(session {})
 (use '[clojure.tools.namespace.repl :only (refresh)]) (refresh)
(server/stop runnable-service)
(server/start runnable-service)
(server/stop runnable-service)
 (use '[clojure.tools.namespace.repl :only (refresh)]) (refresh)
(server/start runnable-service)
(server/stop runnable-service)
 (use '[clojure.tools.namespace.repl :only (refresh)]) (refresh)
(server/start runnable-service)
(server/stop runnable-service)
 (use '[clojure.tools.namespace.repl :only (refresh)]) (refresh)
(server/stop runnable-service) (use '[clojure.tools.namespace.repl :only (refresh)]) (refresh) (server/start runnable-service)
exit
(server/stop runnable-service) (use '[clojure.tools.namespace.repl :only (refresh)]) (refresh) (server/start runnable-service)
(server/stop runnable-service)
(server/stop runnable-service) (use '[clojure.tools.namespace.repl :only (refresh)]) (refresh) (server/start runnable-service)
exit
(server/stop runnable-service) (use '[clojure.tools.namespace.repl :only (refresh)]) (refresh) (server/start runnable-service)
exit
(server/stop runnable-service) (use '[clojure.tools.namespace.repl :only (refresh)]) (refresh) (server/start runnable-service)
(use '[clojure.tools.namespace.repl :only (refresh)]) (refresh) (server/start runnable-service)
(server/stop runnable-service) (use '[clojure.tools.namespace.repl :only (refresh)]) (refresh) (server/start runnable-service)
exit
(use '[clojure.tools.namespace.repl :only (refresh)]) (refresh) (server/start runnable-service)
(server/stop runnable-service) (use '[clojure.tools.namespace.repl :only (refresh)]) (refresh) (server/start runnable-service)
exit
(server/stop runnable-service) (use '[clojure.tools.namespace.repl :only (refresh)]) (refresh) (server/start runnable-service)
exit
(server/start runnable-service)
(server/stop runnable-service) (use '[clojure.tools.namespace.repl :only (refresh)]) (refresh) (server/start runnable-service)
exit
(server/stop runnable-service) (use '[clojure.tools.namespace.repl :only (refresh)]) (refresh) (server/start runnable-service)
exit
(server/stop runnable-service) (use '[clojure.tools.namespace.repl :only (refresh)]) (refresh) (server/start runnable-service)
exit
(server/stop runnable-service) (use '[clojure.tools.namespace.repl :only (refresh)]) (refresh) (server/start runnable-service)
exit
(use '[clojure.tools.namespace.repl :only (refresh)]) (refresh) (server/start runnable-service)
(server/stop runnable-service) (use '[clojure.tools.namespace.repl :only (refresh)]) (refresh) (server/start runnable-service)
exit
(server/stop runnable-service) (use '[clojure.tools.namespace.repl :only (refresh)]) (refresh) (server/start runnable-service)
exit
(use '[clojure.tools.namespace.repl :only (refresh)]) (refresh) (server/start runnable-service)
exit
